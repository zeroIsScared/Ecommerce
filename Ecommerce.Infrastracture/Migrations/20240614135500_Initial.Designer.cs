// <auto-generated />
using System;
using Ecommerce.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Infrastracture.Migrations
{
    [DbContext(typeof(EcommerceDBContext))]
    [Migration("20240614135500_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Domain.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LocalityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Symbol")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "MDL",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 21, DateTimeKind.Unspecified).AddTicks(5178), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2L,
                            Code = "EUR",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(415), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Symbol = "€"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "USD",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(541), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Symbol = "$"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7488), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Mun. Chișinău"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7677), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Mun. Bălți"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7681), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Mun. Bender"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7682), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Anenii Noi"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7684), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Basarabeasca"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7689), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Briceni"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7690), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Cahul"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7691), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Camenca"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7693), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Călărași"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7695), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Cantemir"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7696), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Căușeni"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7698), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Cimișlia"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7699), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Criuleni"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7700), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Dondușeni"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7701), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Drochia"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7703), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Dubăsari"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7704), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Edineț"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7706), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Fălești"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7707), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Florești"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7709), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Glodeni"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7710), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Hîncești"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7711), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Ialoveni"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7713), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Leova"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7714), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Nisporeni"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7715), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Ocnița"
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7716), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Orhei"
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7745), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Rezina"
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7747), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Rîșcani"
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7748), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Sîngerei"
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7750), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Soroca"
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7751), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Strășeni"
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7753), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Șoldănești"
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7754), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Ștefan Vodă"
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7756), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Taraclia"
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7757), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Telenești"
                        },
                        new
                        {
                            Id = 36L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 23, DateTimeKind.Unspecified).AddTicks(7759), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            IsDeleted = false,
                            Name = "Ungheni"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Locality", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Localities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6408), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Băcioi"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6670), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Bîc"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6673), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Brăila"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6674), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Bubuieci"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6676), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Budești"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6678), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Buneți"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6680), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Ceroborta"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6681), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Cheltuitori"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6683), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Chișinău"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6685), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Ciorescu"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6686), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Codru"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6687), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Colonița"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6689), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Condrița"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6690), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Cricova"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6692), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Cruzești"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6693), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Dobrogea"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6694), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Dumbrava"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6696), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Durlești"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6698), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Făurești"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6699), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Frumușica"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6701), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Ghidighici"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6702), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Goian"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6703), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Goianul Nou"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6705), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Grătiești"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6706), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Hulboaca"
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6707), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Humulești"
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6709), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Revaca"
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6710), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Stăuceni"
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6712), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Străisteni"
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6713), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Sîngera"
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6714), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Tohatin"
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6721), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Trușeni"
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6723), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Vadul lui Vodă"
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6725), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Vatra"
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6727), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 1L,
                            IsDeleted = false,
                            Name = "Văduleni"
                        },
                        new
                        {
                            Id = 36L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6728), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 2L,
                            IsDeleted = false,
                            Name = "Bălți"
                        },
                        new
                        {
                            Id = 37L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6730), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 2L,
                            IsDeleted = false,
                            Name = "Elizaveta"
                        },
                        new
                        {
                            Id = 38L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6731), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 2L,
                            IsDeleted = false,
                            Name = "Sadovoe"
                        },
                        new
                        {
                            Id = 39L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6732), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 3L,
                            IsDeleted = false,
                            Name = "Bender"
                        },
                        new
                        {
                            Id = 40L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6734), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 3L,
                            IsDeleted = false,
                            Name = "Proteagailovca"
                        },
                        new
                        {
                            Id = 41L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6735), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Albinița"
                        },
                        new
                        {
                            Id = 42L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6736), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Anenii Noi"
                        },
                        new
                        {
                            Id = 43L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6738), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Balmaz"
                        },
                        new
                        {
                            Id = 44L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6739), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Batîc"
                        },
                        new
                        {
                            Id = 45L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6741), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Beriozchi"
                        },
                        new
                        {
                            Id = 46L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6742), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Botnărești"
                        },
                        new
                        {
                            Id = 47L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6764), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Botnăreștii Noi"
                        },
                        new
                        {
                            Id = 48L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6766), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Bulboaca"
                        },
                        new
                        {
                            Id = 49L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6767), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Calfa"
                        },
                        new
                        {
                            Id = 50L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6769), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Calfa Nouă"
                        },
                        new
                        {
                            Id = 51L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6770), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Chetrosu"
                        },
                        new
                        {
                            Id = 52L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6772), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Chirca"
                        },
                        new
                        {
                            Id = 53L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6773), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Ciobanovca"
                        },
                        new
                        {
                            Id = 54L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6774), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Cobusca Nouă"
                        },
                        new
                        {
                            Id = 55L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6776), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Cobusca Veche"
                        },
                        new
                        {
                            Id = 56L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6777), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Crețoaia"
                        },
                        new
                        {
                            Id = 57L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6778), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Delacău"
                        },
                        new
                        {
                            Id = 58L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6780), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Floreni"
                        },
                        new
                        {
                            Id = 59L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6781), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Florești"
                        },
                        new
                        {
                            Id = 60L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6783), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Geamăna"
                        },
                        new
                        {
                            Id = 61L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6784), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Gura Bîcului"
                        },
                        new
                        {
                            Id = 62L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6785), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Hîrbovăț"
                        },
                        new
                        {
                            Id = 63L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6787), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Hîrbovățul Nou"
                        },
                        new
                        {
                            Id = 64L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6788), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Larga"
                        },
                        new
                        {
                            Id = 65L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6790), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Maximovca"
                        },
                        new
                        {
                            Id = 66L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6792), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Mereni"
                        },
                        new
                        {
                            Id = 67L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6793), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Merenii Noi"
                        },
                        new
                        {
                            Id = 68L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6795), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Mirnoe"
                        },
                        new
                        {
                            Id = 69L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6796), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Nicolaevca"
                        },
                        new
                        {
                            Id = 70L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6797), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Ochiul Roș"
                        },
                        new
                        {
                            Id = 71L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6799), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Picus"
                        },
                        new
                        {
                            Id = 72L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6800), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Puhăceni"
                        },
                        new
                        {
                            Id = 73L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6802), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Roșcani"
                        },
                        new
                        {
                            Id = 74L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6803), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Ruseni"
                        },
                        new
                        {
                            Id = 75L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6804), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Salcia"
                        },
                        new
                        {
                            Id = 76L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6806), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Socoleni"
                        },
                        new
                        {
                            Id = 77L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6807), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Speia"
                        },
                        new
                        {
                            Id = 78L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6808), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Șerpeni"
                        },
                        new
                        {
                            Id = 79L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6810), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Telița"
                        },
                        new
                        {
                            Id = 80L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6811), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Telița Nouă"
                        },
                        new
                        {
                            Id = 81L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6813), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Todirești"
                        },
                        new
                        {
                            Id = 82L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6814), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Troița Nouă"
                        },
                        new
                        {
                            Id = 83L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6815), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Țînțăreni"
                        },
                        new
                        {
                            Id = 84L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6817), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Varnița"
                        },
                        new
                        {
                            Id = 85L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 24, DateTimeKind.Unspecified).AddTicks(6818), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            DistrictId = 4L,
                            IsDeleted = false,
                            Name = "Zolotievca"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.PropertyDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("AuthorType")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("BuildingType")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Floor")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("FloorsNumber")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LandType")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("LivingArea")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("ParkingType")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<int?>("RoomNumber")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId")
                        .IsUnique();

                    b.ToTable("PropertyDetails");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.PropertyPhoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyPhoto");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.PropertyUtility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<long>("UtilityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("UtilityId");

                    b.ToTable("PropertyUtilities");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.UserFavorite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavorites");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Utility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ForAppartment")
                        .HasColumnType("bit");

                    b.Property<bool>("ForHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("ForLand")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(57), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Ready for entry"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(421), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Furnished"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(425), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Air conditioning"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(427), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(428), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Video surveillance"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(432), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Autonomous heating"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(434), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Double-glazed windows"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(435), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Sauna"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(437), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Swimming pool"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(469), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = true,
                            ForHouse = false,
                            ForLand = false,
                            IsDeleted = false,
                            Name = "Elevator"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(471), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = true,
                            IsDeleted = false,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(553), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = true,
                            IsDeleted = false,
                            Name = "Electricity"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(556), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = true,
                            IsDeleted = false,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(558), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = true,
                            IsDeleted = false,
                            Name = "Sewerage"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 6, 14, 16, 55, 0, 25, DateTimeKind.Unspecified).AddTicks(559), new TimeSpan(0, 3, 0, 0, 0)),
                            CreatedBy = "Admin",
                            ForAppartment = false,
                            ForHouse = true,
                            ForLand = true,
                            IsDeleted = false,
                            Name = "Asphalt road"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Address", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.Locality", "Locality")
                        .WithMany("Addresses")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Locality");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Locality", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.District", "District")
                        .WithMany("Localities")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Property", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.Address", "Address")
                        .WithMany("Properties")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Domain.Entities.Currency", "Currency")
                        .WithMany("Properties")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Domain.Entities.User", "User")
                        .WithMany("Properties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Currency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.PropertyDetail", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.Property", "Property")
                        .WithOne("Details")
                        .HasForeignKey("Ecommerce.Domain.Entities.PropertyDetail", "PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.PropertyPhoto", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.Property", "Property")
                        .WithMany("Photos")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.PropertyUtility", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.Property", "Property")
                        .WithMany("Utilities")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Domain.Entities.Utility", "Utility")
                        .WithMany("Properties")
                        .HasForeignKey("UtilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Utility");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.UserFavorite", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.Property", "Property")
                        .WithMany("Favorites")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Domain.Entities.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Ecommerce.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Address", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Currency", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.District", b =>
                {
                    b.Navigation("Localities");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Locality", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Property", b =>
                {
                    b.Navigation("Details")
                        .IsRequired();

                    b.Navigation("Favorites");

                    b.Navigation("Photos");

                    b.Navigation("Utilities");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Ecommerce.Domain.Entities.Utility", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
